//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 7/18/2007 : Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#include "AutoTorturing/src/QoS/qos_aos_qos_clear_generalrule_Tester.h"

#include "CliTorturer/CliTorturer.h"
#include "CliTorturer/ApiTorturerDef.h"
#include "Torturer/Parm.h"
#include "Torturer/ParmIncls.h"
#include "TorturerConds/CondCheckTable.h"
#include "Util/VarList.h"
#include "Util/GenTable.h"
#include "Util/GenRecord.h"
#include "AutoTorturing/src/QoS/Ptrs.h"


AosDefineApiTorturer(AosClass_aos_qos_clear_generalrule, AosClass_aos_qos_clear_generalrulePtr, "ClearGenRule")



bool
AosClass_aos_qos_clear_generalrule::runFunc(bool &correctOnly, 
					   const AosCliTorturerPtr &torturer, 
					   const OmnTestMgrPtr &testMgr, 
					   bool &cmdCorrect)
{
	// 
	// Below are the lines to generate individual arguments
	//
	mTestMgr = testMgr;
	mExecutionFailed = false;
	mExecutionErrmsg = "";
	

	 
	
	
	int __ret;
    if (!(AosCliTorturer::getTestOnlyFlag() || correctOnly && !cmdCorrect))
    {
        correctOnly = true;
         __ret = aos_qos_clear_generalrule();
    }
    else
    {
        correctOnly = false;
    }
    mFuncRet = "";
    mFuncRet << __ret;
	
	
	return true;
}


bool    
AosClass_aos_qos_clear_generalrule::preAddToTableProc(const AosGenTablePtr &table,
                    const AosGenRecordPtr &record,
					bool &cmdCorrect,       
					OmnString &cmdErrmsg)
{

	return true;
}

