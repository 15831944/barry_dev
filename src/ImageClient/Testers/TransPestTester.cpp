//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 3/19/2007 Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#include "TransPest/Testers/TransPestTester.h"

#include "AppMgr/App.h"
#include "Porting/Sleep.h"
#include "Debug/Debug.h"
#include "Tester/Test.h"
#include "Tester/TestMgr.h"
#include "Tracer/Tracer.h"
#include "SEUtil/SeXmlParser.h"
#include "SEUtil/XmlTag.h"
#include "Util/String.h"


AosTransPestTester::AosTransPestTester()
{
    mTries = 10000;
    mName = "AosTransPestTester";
}


AosTransPestTester::~AosTransPestTester()
{
}


bool
AosTransPestTester::start()
{
	cout << "    Start OmnString Tester ...";
    basicTest();
    return true;
}


bool
AosTransPestTester::basicTest()
{
    beginTest();
	return true;
}

bool
AosTransPestTester::beginTest()
{
    AosTransPest trans;
	
	AosXmlTagPtr config = OmnApp::getAppConfig(); 
	trans.init(config);
	OmnString tr = "aaaaabbbbbccccccddddd";
//	for(int i=0; i!=mTries; i++)
//	{
//		trans.saveTrans(tr);
//	}
	while(1)
	{
		OmnSleep(1000);
	}
	
	return true;
}


