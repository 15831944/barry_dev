//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 4/12/2007 Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#ifndef Aos_InetCtrl_Tester_AosIacTester_h
#define Aos_InetCtrl_Tester_AosIacTester_h

#include "Debug/Debug.h"
#include "InetCtrl/Tester/Ptrs.h"
#include "StreamSimu/Ptrs.h"
#include "Tester/TestPkg.h"
#include "Random/RandomInteger.h"
#include "UtilComm/Ptrs.h"

class AosIacTester : public OmnTestPkg
{
private:
	
	enum
	{
		eDefaultMaxTrafficTime = 360,
		eDefaultMaxConfigCommands  = 360,
		eDefaultWaitTime    = 60,
		eDefaultMaxConns	= 128,
		eMaxBandwidth		= 256,
		eMaxPacketSize		= 128,
		eMaxBw				= 256,
		eMinBw				= 128,
		eMaxProcStreamInterval = 30,
		eMaxCheckInterval	= 30,
		eMinDport = 10000,
		eMaxDport = 20000,
		eMaxStream = 256,
		eMinCliCount = 200,
		eMaxCliCount = 600	
		
	};
	
	struct stream
	{
		u32 sip;
		int sport;
		u32 dip;
		int dport;
		OmnString protocol;
		u32 startTime;
		u32 endTime;
		
		stream();
		~stream();
		stream& operator = (const stream &stm);
		void clear();
	};
	
	struct stream 	mStreamList[eMaxStream];
		                                                       
    int         			mTries;
	u32						mMaxConnsToCreate;
	u32						mMaxWaitTime;
	AosRandomIntegerPtr		mConnCreationSelector;
	AosRandomIntegerPtr		mConnDurationSelector;
	AosRandomIntegerPtr		mTrafficPatternSelector;
	AosRandomIntegerPtr		mRemotePortSelector;
	int						mMaxTrafficTime;
	int						mNextConfigTime;
	int						mTotalConns;
	int						mMaxConns;
	AosInetCliTesterPtr		mCliTorturer; 
//	AosStreamSimuMgrPtr		mStreamMgr;
	int						mMaxConfigCommands;
	bool					mDefaultPolicy;
	OmnString				mLocalIpRange;
	OmnString               mLocalNetmask;
	OmnString				mRemoteIpRange;
	OmnString               mRemoteNetmask;
	int						mStreamNum;
	
	OmnTcpClientPtr			mBouncerConn;
	OmnIpAddr 				mBouncer_Ip;
	int						mBouncer_Port;

	OmnTcpClientPtr			mRhcConn;
	OmnIpAddr 				mRhc_Ip;
	int						mRhc_Port;
	
public:
    AosIacTester();
    virtual ~AosIacTester();
    virtual bool     start();


    bool 	basicTest();

private:
	bool		init();
	bool		procStreams();
	bool		checkResult();	
	bool		createConnOnlyHitGroup();
	bool		createConnOnlyHitApp();
	bool		createConnNotHitGroupApp();
	bool		createConnHitGroupApp();
	u32			genInRangeIp(const OmnIpAddr &netaddr, const OmnIpAddr &netmask);
	u32			getRandomSip();
	u32			getRandomDip();
	bool		getSipNotInGroup();
	int			getRandomSport();
	int			getRandomDport();
	int			getRandomPort();
	OmnString	getRandomProto();
	bool		getIpPortNotInApp(u32 &dip, int &dport, OmnString &protocol);
	bool		getIpPortNotInGroupApp(u32 &sip, u32 &dip, int &dport, OmnString &protocol);
	bool		getIpPortInGroupApp(u32 &sip, u32 &dip, int &dport, OmnString &protocol);
	bool		addStream();
	bool		removeStream();
	bool		saveToStreamList(u32 &sip, int &sport, u32 &dip,
								 int &dport,OmnString &protocol,
								 u32 &startTime);
	bool		delFromStreamList(int index);
	bool		setSystemTime();
	bool		addBouncer(u32 &sip, int &sport, 
						 u32 &dip, int &dport, 
						 OmnString &protocol);
	bool		sendCmd(const OmnString &cmd, const OmnTcpClientPtr &dstServer);
	bool		sendCmd(const OmnString &cmd,const OmnTcpClientPtr &dstServer,
					    OmnString &strRslt);
	OmnString	getCheckTime();
	u32			getStartTime();	
	long 		getCrtBw(const int streamNum);
	bool        addConn(u32 &sip, int &sport, u32 &dip, int &dport, OmnString &protocol);
	int			connExist(u32 &sip, int &sport, u32 &dip, int &dport, OmnString &protocol);
	bool		getRandomParms(u32 &sip, int &sport, u32 &dip, int &dport, OmnString &protocol);
	bool		removeAllBouncer();
	bool		removeAllStream();
	bool		clearAll();
};
#endif

