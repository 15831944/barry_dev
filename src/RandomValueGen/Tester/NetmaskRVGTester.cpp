//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 05/06/2007 Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#include "RandomValueGen/Tester/NetmaskRVGTester.h"

#include "RandomValueGen/Ptrs.h"
#include "RandomValueGen/RVGNetmask.h"
#include "RandomValueGen/Util.h"
#include "RandomValueGen/Tester/Util.h"
#include "Debug/Debug.h"
#include "Tester/Test.h"
#include "Tester/TestMgr.h"
#include "Util/OmnNew.h"
#include "Util/GenTable.h"
#include "Util/GenRecord.h"
#include "XmlParser/XmlItem.h"


AosNetmaskRVGTester::AosNetmaskRVGTester()
{
    mName = "AosNetmaskRVGTester";
}


AosNetmaskRVGTester::~AosNetmaskRVGTester()
{
}


bool
AosNetmaskRVGTester::start()
{
	createData();
//    testNewKey();
	stressTest(1000000 * 100);
    return true;
}


const OmnString sgTableWithKeyDef = 
"<TableDef>"
	"<MaxEntries>1000</MaxEntries>"
	"<KeyFields>netmask</KeyFields>"
	"<Fields>"
		"<Field>"
			"<Type>string</Type>"
			"<Name>netmask</Name>"
		"</Field>"
	"</Fields>"
"</TableDef>";

const OmnString sgTableNoKeyDef = 
"<TableDef>"
	"<MaxEntries>1000</MaxEntries>"
	"<Fields>"
		"<Field>"
			"<Type>string</Type>"
			"<Name>netmask</Name>"
		"</Field>"
	"</Fields>"
"</TableDef>";

bool
AosNetmaskRVGTester::createData()
{
	// 
	// Create Parms 
	//
	/*
	OmnXmlItemPtr item = OmnNew OmnXmlItem(sgTableWithKeyDef);
	mTableWithKey = OmnNew AosGenTable(item);

	item = OmnNew OmnXmlItem(sgTableNoKeyDef);
	mTableNoKey = OmnNew AosGenTable(item);

	OmnDynArray<AosGenTablePtr> depTables;
	OmnDynArray<OmnString> fieldnames;
	OmnString badaddr("1.2.3.4");
	mParmNew = OmnNew AosRVGNetmask("Netmask", "netmask", eAosRVGKeyType_SingleKeyNew, 
					false, badaddr, mTableWithKey, depTables, fieldnames);
	mParmExist = OmnNew AosRVGNetmask("Netmask", "netmask", eAosRVGKeyType_SingleKeyExist,
					false, badaddr, mTableWithKey, depTables, fieldnames);
	mParmNotKey = OmnNew AosRVGNetmask("Netmask", "netmask", 
					eAosRVGKeyType_NoKey, false, badaddr, mTableNoKey, 
					depTables, fieldnames);
	*/
	return true;
}

