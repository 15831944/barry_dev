//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 05/06/2007 Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#ifndef Aos_RandomValueGen_Tester_AosRVGTester_h
#define Aos_RandomValueGen_Tester_AosRVGTester_h

#include "CliTorturer/Ptrs.h"
#include "Debug/Debug.h"
#include "Random/RandomUtil.h"
#include "Tester/TestPkg.h"
#include "RandomValueGen/RVG.h"
#include "RandomValueGen/Ptrs.h"
#include "Util/String.h"
#include "Util/Ptrs.h"



class AosRVGTester : public OmnTestPkg
{
	enum
	{
		ArraySize = 100
	};

protected:
	u32					mTries;
	AosGenTablePtr		mTableWithKey;
	AosGenTablePtr		mTableNoKey;
	AosRVGPtr			mParmNew;
	AosRVGPtr			mParmExist;
	AosRVGPtr			mParmNotKey;
	u32					mStatus[ArraySize];

public:
    AosRVGTester();
    ~AosRVGTester();

protected:
	bool 	testNewKey();
	bool	stressTest(const u32 tries);
	bool	runNewKey();
	bool	runExistKey();
	bool	runNoKey();
	bool	printStatus(const u32 tries);
	virtual bool 	recordReturnCode(const OmnString &value, 
							const AosRVGPtr &parm,
							const OmnString &errmsg, 
							const AosRVGReturnCode errcode);
	bool	shrinkKeyTable();
	bool	shrinkNoKeyTable();
};
#endif

