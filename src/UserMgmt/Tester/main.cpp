////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility.  
//
// Modification History:
// 3/19/2007: Created by TorturerGen facility
////////////////////////////////////////////////////////////////////////////

#include "Tester/TestMgr.h"
          
#include "AppMgr/App.h"
#include "DataStore/StoreMgr.h"
#include "Debug/Debug.h" 
#include "Porting/GetTime.h"
#include "SingletonClass/SingletonMgr.h"    
#include "SQLite/Ptrs.h"
#include "SQLite/DataStoreSQLite.h"
#include "Tester/TestSuite.h"
#include "Tester/TestPkg.h"
#include "UserMgmt/Tester/TestSuite.h"
#include "Util/OmnNew.h"
  

int 
main(int argc, char **argv)
{
	OmnApp theApp(argc, argv);
	try
	{
		theApp.startSingleton(OmnNew OmnStoreMgrSingleton());
//		OmnDataStoreSQLitePtr sqlite = OmnNew OmnDataStoreSQLite("/home/cding/AOS/Data/Database/AM.db", "");
//		sqlite->setSupportedStoreId(OmnStoreId::eGeneral, true);
//		OmnStoreMgr::getSelf()->addStore(sqlite);

//cout << "SQLite: " << sqlite.getPtr() << endl;
	}

	catch (const OmnExcept &e)
	{
		OmnAlarm << "Failed to start the application: " << e.toString() << enderr;
		theApp.exitApp();
		return 0;
	}

	OmnDataStoreSQLite::startSQLite("/home/cding/AOS/Data/Database/AM.db");

	// 
	// This is the application part
	//
	OmnTestMgrPtr testMgr = OmnNew OmnTestMgr("Util/Tester", "Try", "Chen Ding");
	testMgr->addSuite(AosUserMgmtTorturerTestSuite::getSuite());

	cout << "Start Testing ..." << endl;
 
	testMgr->start();

	cout << "\nFinished. " << testMgr->getStat() << endl;

	testMgr = 0;
 
	// theApp.appLoop();
	theApp.exitApp();
	return 0;
} 

 
