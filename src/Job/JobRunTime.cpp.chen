////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Modification History:
// 2015/01/19 Created by Jozhi
////////////////////////////////////////////////////////////////////////////
#include "Job/JobRunTime.h"

AosJobRunTime::AosJobRunTime()
:
mLock(OmnNew OmnMutex())
{
}

AosJobRunTime::~AosJobRunTime()
{
}


AosBSONPtr
AosJobRunTime::get(const OmnString &key)
{
	map<OmnString, AosBSONPtr>::iterator itr;
	AosBSONPtr value;
	mLock->lock();
	itr = mVariableEnv.find(key);
	if (itr != mVariableEnv.end())
	{
		value = itr->second;
	}
	mLock->unlock();
	return value;
}

bool
AosJobRunTime::set(
		const OmnString &key, 
		const AosBSONPtr &value)
{
	mLock->lock();
	mVariableEnv[key] = value;
	mLock->unlock();
	return true;
}


//move to the trans
/*
AosBSONPtr
AosJobRunTime::getRunTimeValue(
		const u64 &job_docid,
		const OmnString &key,
		const AosRundataPtr &rdata)

{
	AosJobObjPtr job = AosJobMgrObj::getStartJob(job_docid, rdata);
	aos_assert_r(job, false);
	return job->getRunTimeValue(key, rdata);
}

bool			
AosJobRunTime::setRunTimeValue(
		const u64 &job_docid,
		const OmnString &key, 
		const AosBSONPtr &value,
		const AosRundataPtr &rdata)
{
	AosJobObjPtr job = AosJobMgrObj::getStartJob(job_docid, rdata);
	aos_assert_r(job, false);
	return job->setRunTimeValue(key, value, rdata);
}
*/
