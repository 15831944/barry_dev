//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 3/15/2007 Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#include "ClassTorturer/Tester/BasicTester.h"

#include "ClassTorturer/ExampleMemFuncCaller.h"
#include "Debug/Debug.h"
#include "Tester/Test.h"
#include "Tester/TestMgr.h"
#include "Torturer/ParmStr.h"
#include "Util/GenTable.h"
#include "Util/GenRecord.h"


AosBasicTester::AosBasicTester()
{
    mTries = 100;
    mName = "AosBasicTester";
}


AosBasicTester::~AosBasicTester()
{
}


bool
AosBasicTester::start()
{
	mTable = OmnNew AosGenTable(2, 2, 2, 2, 100);
	mObject = OmnNew AosGenTable(2, 2, 2, 2, 100);
	AosGenRecordPtr record = mObject->appendRecord();
	record->set(0, "Chen");

    testNextIp();
    return true;
}


bool
AosBasicTester::testNextIp()
{

	AosParmStrPtr parm = OmnNew AosParmStr("FieldIndex", 2, 10, 0, eAosArgKeyType_NotKey);
	AosExampleMemFuncCaller call("Test", mTestMgr);
	call.appendParm(parm);

	call.callMemFunc(mTable, mObject);
	return true;
}



