/*generated by gencode.py
 *author: bill xia
 modifiy:Ricky Chen
 */

#include "aosApi.h"
#include <stdio.h>
#include <iostream.h>

int main(int argc,char ** argv)
{
    char result[10240];
    int ret = 0;
    int len = 10240;
    int total_case = 0;
    int fail_case = 0;
//<<<<<<< main.cpp
    int index=1;
    int count=0;
    int maxruntime=2;
    FILE *fp=NULL; 
 while(index<argc)
	{
		if(strcmp(argv[index],"-t")==0)
		{
			maxruntime=atoi(argv[++index]);
			index++;
			continue;
		}
		if(strcmp(argv[index],"-h")==0)
		{
			cout<<"----------------------helps for usage------------------------------------------"<<endl;
			
			cout<<"1 usage: ./mactester [-t [count]]"<<endl;
			cout<<""<<endl;
			cout<<"2 the parameter [-t [count]] is optinal,it control the total run count of this application ."<<endl;
			cout<<" it's default value is 2 ,if it need to set it .it need a number of 2's times(eg: 2,4,6,...)  "<<endl;
			cout<<""<<endl;
			cout<<"3 the result will be added to the files macresult1 and macresult2 in the current directory at the mean time"<<endl;
			cout<<" ,and this two result file's content should be the same"<<endl;
			cout<<""<<endl;
			cout<<"4 exmaple: './mactester -t 10 ' or ' ./mactester '"<<endl;
			cout<<""<<endl;
			exit(0);
		}
	}
/*
 =======
    int index=1;
    int count=0;
    int maxruntime=2;
    FILE *fp=NULL; 
    
 while(index<argc)
	{
		if(strcmp(argv[index],"-t")==0)
		{
			maxruntime=atoi(argv[++index]);
			index++;
			continue;
		}
		if(strcmp(argv[index],"-h")==0)
		{
			cout<<"----------------------helps for usage------------------------------------------"<<endl;
			cout<<"1 usage: ./mactester.exe [-t [count]]"<<endl;
			cout<<""<<endl;
			cout<<"2 exmaple: './mactester.exe -t 10 ' or ' ./mactester.exe '"<<endl;
			cout<<""<<endl;
			cout<<"3 the paramete [-t [count]] is optinal,it's default value is 2 ,it need to set a number of 2's "<<endl;
			cout<<"  times(eg: 2,4,6,...)  "<<endl;
				cout<<""<<endl;
			cout<<"4 the result will be added to the files macresult1 and macresult2 in the current directory at the mean time,"<<endl;
			cout<<"  and the contents in macresult1 and macresult2 should be the same "<<endl;
			cout<<""<<endl;
			exit(0);
		}
	}

 >>>>>>> 1.3.2.2

	
*/

while(count<maxruntime)
	{
		printf("================================ Now run the %d time=========================================\n",count+1);
		printf("==============================================================================================\n");
	
		if(count%2==0)
		{
			fp=fopen("macresult1","a+");
		}
		else
		{
			fp=fopen("macresult2","a+");
		} 

cout<<"==============================mac set section ==================================================\n"<<endl;
   ret = aos_mac_set("outcard", "00:13:43:12:45:21");
    if (ret != 0) {
        printf("caseId:1	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac clone set   ret= "<<ret<<endl;
		fprintf(fp,"mac clone set   ret=%d\n", ret);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    

   ret = aos_mac_get("outcard", result, &len);
    if (ret != 0) {
        printf("caseId:3	ret = %d	Error\n", ret);
        fail_case++;
    }
	  total_case++;
	  cout<<"mac get outcard   ret= "<<ret<<"\n"<<result<<endl;
		fprintf(fp,"mac get outcard ret=%d\n%s\n", ret,result);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
    len = 10240;
    ret = aos_mac_clone_retrieve_config(result, &len);
    if (ret != 0) {
        printf("caseId:7	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac show config   ret= "<<ret<<"\n"<<result<<endl;
		fprintf(fp,"mac show config  ret=%d\n%s\n", ret,result);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    

    ret = aos_mac_restore("outcard");
    if (ret != 0) {
        printf("caseId:2	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac back set   ret= "<<ret<<endl;
		fprintf(fp,"mac back set  ret=%d\n", ret);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
   ret = aos_mac_get("outcard", result, &len);
    if (ret != 0) {
        printf("caseId:3	ret = %d	Error\n", ret);
        fail_case++;
    }
	  total_case++;
	  cout<<"mac get outcard   ret= "<<ret<<"\n"<<result<<endl;
		fprintf(fp,"mac get outcard ret=%d\n%s\n", ret,result);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
    ret = aos_mac_clone_save_config();
    if (ret != 0) {
        printf("caseId:5	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac save config   ret= "<<ret<<endl;
		fprintf(fp,"mac save config  ret=%d\n", ret);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    

	//not use
   /* ret = aos_mac_clone_load_config();
    if (ret != 0) {
        printf("caseId:6	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
   */

//    ret = aos_mac_get("incard");
 //   if (ret != 0) {
 //       printf("caseId:4	ret = %d	Error\n", ret);
  //      fail_case++;
  //  }
   // total_case++;

  	
    ret = aos_mac_clone_clear_config();
    if (ret != 0) {
        printf("caseId:8	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac clear config   ret= "<<ret<<endl;
		fprintf(fp,"mac clear config  ret=%d\n", ret);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
    len = 10240;
    ret = aos_mac_clone_retrieve_config(result, &len);
    if (ret != 0) {
        printf("caseId:7	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac show config   ret= "<<ret<<"\n"<<result<<endl;
		fprintf(fp,"mac show config  ret=%d\n%s\n", ret,result);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
 cout<<"==============================wrong inputs section ==================================================\n"<<endl;
 
  ret = aos_mac_set("outcard", "00:133:43:12:45:21");
    if (ret == 0) {
        printf("caseId:1	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac clone set   ret= "<<ret<<endl;
		fprintf(fp,"mac clone set   ret=%d\n", ret);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
     ret = aos_mac_restore("eth0");
    if (ret == 0) {
        printf("caseId:2	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac back set   ret= "<<ret<<endl;
		fprintf(fp,"mac back set  ret=%d\n", ret);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
     len = 10240;
    ret = aos_mac_clone_retrieve_config(result, &len);
    if (ret != 0) {
        printf("caseId:7	ret = %d	Error\n", ret);
        fail_case++;
    }
    total_case++;
    cout<<"mac show config   ret= "<<ret<<"\n"<<result<<endl;
		fprintf(fp,"mac show config  ret=%d\n%s\n", ret,result);
    cout<<"-----------------------------------------------------------------------------------------------"<<endl;
    
    fclose(fp);
    count++;
}


    cout<<"====================================== MAC APIS TEST RESULT SUMMARY=========================================="<<endl;
    cout<<"the application run total counts:"<<count<<endl;
    printf("total case: %d\nfail  case: %d\n", total_case, fail_case);
    cout<<""<<endl;
      cout<<"============================================================================================================="<<endl;
    return 0;
}
