/*
 * generated by genAPI.py
 * author: bill xia<xw_cn@163.com>
 */
#include "common.h"
#include "aosApi.h"
#define MAX_BUFF_LEN 10240
/*
 * start pppoe service
 */
int aos_api_pppoe_start()
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];

	sprintf(cmd, "pppoe start ");

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

/*
 * stop pppoe servic
 */
int aos_api_pppoe_stop()
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];

	sprintf(cmd, "pppoe stop ");

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

/*
 * show current configure
 */
int aos_api_pppoe_retrieve_config(char* result, int* resultlen)
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];
	int len;

	sprintf(cmd, "pppoe show config ");

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	len = strlen(rslt);
	if (len > *resultlen)
	{
		strncpy(result, rslt, *resultlen);
		return eAosRc_LenTooShort;
	}
	else
	{
		strcpy(result, rslt);
		*resultlen = len;
	}
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

/*
 * save current config
 */
int aos_api_pppoe_save_config()
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];

	sprintf(cmd, "pppoe save config ");

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

/*
 * clear current config
 */
int aos_api_pppoe_clear_config()
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];

	sprintf(cmd, "pppoe clear config ");

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

/*
 * set account username
 */
int aos_api_pppoe_username_set(char* str1)
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];

	sprintf(cmd, "pppoe username set  %s ", str1);

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

/*
 * set account password
 */
int aos_api_pppoe_password_set(char* str1)
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];

	sprintf(cmd, "pppoe password set  %s ", str1);

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

/*
 * set dns used by dns
 */
int aos_api_pppoe_dns_set(char* str1, char* str2)
{
	OmnString rslt = "";
	char* tmp;
	char cmd[MAX_BUFF_LEN];

	sprintf(cmd, "pppoe dns set  %s  %s ", str1, str2);

	OmnCliProc::getSelf()->runCliAsClient(cmd, rslt);
	tmp = rslt.getBuffer();
	tmp += rslt.find(0, false) + 1;

	return *((int*)tmp);
}

