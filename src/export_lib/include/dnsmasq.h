/*
 * generated by genAPI.py
 * author: bill xia<xw_cn@163.com>
 */
#ifndef AOS_RHC_DNSMAQ_API_H
#define AOS_RHC_DNSMASQ_API_H
#define MAX_IP_ADDR_LEN 16 
#define MAX_IP_STRING_LEN 32
#define MAX_MAC_STRING_LEN 32
#define MAX_NAME_STRING_LEN 32
#define MAX_LEN	256
//#include "aosUtil/List.h"
#include "aosReturnCode.h"
enum
{
	eAosRc_InvalidHostname=114001,
	eAosRc_LabelAlreadyUsed,
	eAosRc_LabelNotFound,
	eAosRc_InvalidLeaseTime,
	//eAosRc_FileNotFound,
	//eAosRc_FileFailRead,
};

 struct dnsmasqBindEntry
{
	char alias[MAX_NAME_STRING_LEN+1];
	char mac[MAX_MAC_STRING_LEN+1];
	char ip[MAX_IP_STRING_LEN+1];
	//struct aos_list_head datalist;
};

struct dnsmasqHostsEntry
{
	char alias[MAX_NAME_STRING_LEN+1];
	char ip[MAX_IP_STRING_LEN+1];
	char domain[MAX_NAME_STRING_LEN+1];
	//struct aos_list_head datalist;
};

struct dnsmasqConfigEntry
{
	char hostname[MAX_LEN]  ;
	char exceptDev[MAX_LEN] ;
	char ip1[MAX_LEN]       ;
	char ip2[MAX_LEN]       ;
	char netmask[MAX_LEN]   ;
	char status[MAX_LEN]    ;
	char leaseTime[MAX_LEN] ;
	char dns1[MAX_LEN]      ;
	char dns2[MAX_LEN]      ;
	//OmnString ip;
	//OmnString mac;
	struct dnsmasqHostsEntry dnsmasqHosts;
	struct dnsmasqBindEntry dnsmasqBind;
};
/*
 * starts DHCP Server
 */
extern int aos_dnsmasq_start();
/*
 * stops DHCP Server
 */
extern int aos_dnsmasq_stop();
/*
 * this is description
 */
extern int aos_dnsmasq_set_name(char*);
/*
 * sets DHCP Server's IP block range
 */
extern int aos_dnsmasq_set_ip_block(char*, char*, char*);
/*
 * sets DHCP Server's IP block range
 */
extern int aos_dnsmasq_get_ip_block(char*, char*);
/*
 * sets DHCP Server's lease time.
 */
extern int aos_dnsmasq_set_lease_time(char*);
/*
 * ets DHCP Server's lease time.
 */
extern int aos_dnsmasq_get_lease_time(char*, int*);
/*
 * set except interface which the DHCP Server does not take effect
 */
extern int aos_api_dnsmasq_set_except_dev(char*);
/*
 * adds an IP address and a MAC address binding
 */
extern int aos_dnsmasq_add_bind(char*, char*, char*);
/*
 * removes a hosts table entry which associates IP addresses with hostnames 
 */
extern int aos_dnsmasq_del_host(char*);
/*
 *  adds a hosts table entry which associates IP addresses with hostnames or domainnames
 */
extern int aos_dnsmasq_add_host(char*, char*, char*);
/*
 * remove an IP address and a MAC address binding
 */
extern int aos_dnsmasq_del_bind(char*);
/*
 * gets bind address
 */
extern int aos_dnsmasq_get_bind(char*, int*);
/*
 * sets DHCP Server's DNS IP address
 */
extern int aos_dnsmasq_set_dns(char*, char*);
/*
 * gets DHCP Server's DNS IP address
 */
extern int aos_dnsmasq_get_dns(char*, int*);
/*
 * get dns address
 */
extern int aos_dnsmasq_retrieve_config(char* ,int*);
/*
 * clear current config
 */
extern int aos_dnsmasq_clear_config();
/*
 * save current config
 */
extern int aos_dnsmasq_save_config();
/*
 * reload DHCP Server configuration
 */
extern int aos_dnsmasq_load_config();

extern int readBlock(const char *buffer, const char *start, const char *end, char *result, int result_len);

extern int aos_dhcp_server_get_binding_by_mac(char *mac, char *result);

extern int aos_dhcp_server_get_binding_by_ip(char *ip, char *result);

extern int aos_dhcp_server_get_binding_by_label(char *label, char *result);

extern int aos_dnsmasq_retrieve_log(char* result, int* resultlen);
#endif
