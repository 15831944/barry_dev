//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 4/21/2007 Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#ifndef Aos_HacDaemon_Tester_AosHacTester_h
#define Aos_HacDaemon_Tester_AosHacTester_h

#include "aosUtil/Types.h"
#include "Debug/Debug.h"
#include "HacDaemon/Tester/Ptrs.h"
#include "Random/Ptrs.h"
#include "StreamSimu/StreamType.h"
#include "Tester/TestPkg.h"
#include "Util/Ptrs.h"
#include "Util/ValList.h"



class AosHacTester : public OmnTestPkg
{
private:
	enum
	{
		eDefaultStartPort = 10000,
		eDefaultEndPort = 20000,
		eDefaultMaxConns = 2000,
		eDefaultMaxTrafficDuration = 60, 	// 60 seconds
		eDefaultCorrectUserPct = 90,
		eDefaultCorrectPwdPct = 90,
		eDefaultCorrectSendIPPct = 90,
		eDefaultCorrectRecvIPPct = 90
	};

    int              	mBasicTestRepeat;
    AosGenTablePtr   	mTable;
	AosHacCliTesterPtr	mCliTester;
	u32					mMaxConns;
	u32					mMaxTrafficDuration;
	u16					mStartPort;
	u16					mEndPort;
	u32					mNumConns;

	AosRandomIntegerPtr	mAppTypeSelector;
	int		mCorrectUserPct;
	int		mCorrectPwdPct;
	int		mCorrectSendIPPct;
	int		mCorrectRecvIPPct;
	OmnVList<u16>		mPorts;

public:
    AosHacTester();
    ~AosHacTester();

    virtual bool     start();


private:
    bool basicTest(const u32 repeat, const AosGenTablePtr &table);
	bool config();
	bool runTraffic();
	bool getAppInfo(AosStreamType::E &app, 
					OmnString &user,
					OmnString &pwd,
					OmnIpAddr &sendIP, 
					int       &sendPort,
					OmnIpAddr &recvIP, 
					int       &recvPort, 
					bool	  &pass);

private:
	u32 	getNextDuration();
	bool	addConn();
	int		getSendPort();
	u32 	nextNumConcurrentConns();
};
#endif

