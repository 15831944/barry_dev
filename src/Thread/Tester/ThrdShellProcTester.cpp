//////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2005
// Packet Engineering, Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification is not permitted unless authorized in writing by a duly
// appointed officer of Packet Engineering, Inc. or its derivatives
//
// Description:
// This file is automatically generated by the TorturerGen facility. 
//
// Modification History:
// 4/16/2007 Created by TorturerGen Facility
//////////////////////////////////////////////////////////////////////////
#include "Thread/Tester/ThrdShellProcTester.h"

#include "Debug/Debug.h"
#include "Tester/Test.h"
#include "Tester/TestMgr.h"
#include "Thread/ThrdMsgQueue.h"
#include "Thread/ThreadShellMgr.h"
#include "Thread/Tester/Ptrs.h"
#include "Thread/Tester/ThrdShellProcExample.h"
#include "Util/OmnNew.h"


AosThrdShellProcTester::AosThrdShellProcTester()
{
    mTries = 10000;
    mName = "AosThrdShellProcTester";
}


AosThrdShellProcTester::~AosThrdShellProcTester()
{
}


bool
AosThrdShellProcTester::start()
{
    basicTest();
    return true;
}


bool
AosThrdShellProcTester::basicTest()
{
	// 
	// Create a ThrdShellProcExample
	//
	AosThrdShellProcExamplePtr proc = OmnNew AosThrdShellProcExample();

	OmnTrace << "To process" << endl;
	OmnThreadShellMgr::getSelf()->proc(proc);

	OmnTrace << "To wait" << endl;
	if (proc->waitUntilFinished())
	{
		OmnTrace << "Process finished" << endl;
	}
	else
	{
		OmnTrace << "Process failed" << endl;
	}
    return true;
}


